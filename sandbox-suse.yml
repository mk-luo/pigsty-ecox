#!/usr/bin/env ansible-playbook
---
#------------------------------------------------------------------------------
# provision nodes
#------------------------------------------------------------------------------
- name: Provision Node
  become: yes
  hosts: meta
  gather_facts: yes
  tags: node
  vars:
    node_packages:
      - tuned
    node_meta_packages:
      - python-netaddr
    node_repo_method: 'none'
    node_static_network: false

  tasks:
    - name: Set fact whether pg port is open
      set_fact:
        node_os: "{{ ansible_distribution }}"

    - include_tasks: roles/node/tasks/firewall.yml
    - include_tasks: roles/node/tasks/pkgs.yml
    - include_tasks: roles/node/tasks/feature.yml
    - include_tasks: roles/node/tasks/kernel.yml
    - include_role:
        name: node
        tasks_from: tuned
    - include_role:
        name: node
        tasks_from: users


#------------------------------------------------------------------------------
# init meta service (only run on meta nodes)
#------------------------------------------------------------------------------
- name: Init meta service
  become: yes
  hosts: meta
  gather_facts: no
  tags: meta
  vars:
    #------------------------------------------------------------------------------
    # RECOMMEND CHANGES
    #------------------------------------------------------------------------------
    prometheus_sd_method: static                  # service discovery method: static|consul|etcd
  tasks:
    - name: Deploy nginx
      block:
        - name: Install nginx
          shell: /usr/bin/zypper -n --no-gpg-check install {{ repo_home }}/{{ repo_name }}/nginx-*.rpm

        - include_role:
            name: nginx
            tasks_from: content

        - include_role:
            name: nginx
            tasks_from: config

        - include_role:
            name: nginx
            tasks_from: restart

    - name: Deploy prometheus and grafana
      tags: deploy_prometheus
      block:
        - name: Install prometheus
          shell: tar xzf {{ repo_home }}/{{ repo_name }}/{{ item }} -C /
          with_items:
            - prometheus-2.26.0.tar.gz
            - alertmanager-0.21.0.tar.gz

        - name: Create prometheus group
          group:
            name: prometheus
            state: present

        - name: Create prometheus user
          user:
            name: prometheus
            home: /var/lib/prometheus
            group: prometheus
            state: present

        - include_tasks: roles/prometheus/tasks/cleanup.yml

        - include_role:
            name: prometheus
            tasks_from: config

        - include_role:
            name: prometheus
            tasks_from: launch

        - include_role:
            name: prometheus
            tasks_from: targets

        - include_role:
            name: prometheus
            tasks_from: reload

    - name: Deploy grafana
      tags: deploy_grafana
      block:
        - name: Install grafana
          shell: /bin/rpm -i --nodeps --replacepkgs {{ repo_home }}/{{ repo_name }}/grafana-*.rpm

        - name: Stop grafana service
          ignore_errors: true
          tags: grafana_stop
          systemd: name=grafana-server state=stopped enabled=yes daemon_reload=yes

        - include_role:
            name: grafana
            tasks_from: plugins

        - include_role:
            name: grafana
            tasks_from: config

        - include_role:
            name: grafana
            tasks_from: customize

        - name: Launch Grafana
          tags: grafana_launch
          block:
            - name: Launch grafana service
              systemd: name=grafana-server state=restarted enabled=yes daemon_reload=yes

            - name: Wait for grafana online
              wait_for: host=localhost port=3000 state=started

        - include_tasks: roles/grafana/tasks/provision.yml


#------------------------------------------------------------------------------
# init zookeeper on nodes
#------------------------------------------------------------------------------
- name: Init zookeeper
  become: yes
  hosts: meta
  tags: zookeeper
  gather_facts: no
  roles:
    - role: zookeeper
      tags: zookeeper



#------------------------------------------------------------------------------
# init node and database
#------------------------------------------------------------------------------
- name: Init EcoX Cluster
  become: yes
  hosts: pg-test
  tags: "create_cluster"
  gather_facts: no
  roles:
    - role: ecox                         # init ecox cluster
      vars:
        pg_dbsu: postgres                # must be postgres



#------------------------------------------------------------------------------
# Deploy monitor on selected targets
#------------------------------------------------------------------------------
- name: Monitor Only Deployment
  become: yes
  hosts: pg-test
  gather_facts: no
  tags: monitor
  roles:
    - role: monitor                         # init monitor system
  vars:
    #------------------------------------------------------------------------------
    # RECOMMEND CHANGES
    #------------------------------------------------------------------------------
    # You'd better change those options in your main config file
    # prometheus_sd_method: static          # MUST use static sd for monitor only mode
    service_registry: none                  # MUST NOT register services
    exporter_install: binary                # none|yum|binary, none by default

    # exporter_install controls how node_exporter & pg_exporter are installed
    #    none   : I've already installed manually
    #    yum    : Use yum install, `exporter_repo_url` will be added if specified
    #    binary : Copy binary to /usr/bin. You must have binary in your `files` dir

    #------------------------------------------------------------------------------
    # MONITOR PROVISION
    #------------------------------------------------------------------------------
    # - install - #
    # exporter_install: none                        # none|yum|binary, none by default
    # exporter_repo_url: ''                         # if set, repo will be added to /etc/yum.repos.d/ before yum installation

    # - collect - #
    # exporter_metrics_path: /metrics               # default metric path for pg related exporter

    # - node exporter - #
    # node_exporter_enabled: true                   # setup node_exporter on instance
    # node_exporter_port: 9100                      # default port for node exporter
    # node_exporter_options: '--no-collector.softnet --collector.systemd --collector.ntp --collector.tcpstat --collector.processes'

    # - pg exporter - #
    # pg_exporter_config: pg_exporter-demo.yaml     # default config files for pg_exporter
    # pg_exporter_enabled: true                     # setup pg_exporter on instance
    # pg_exporter_port: 9630                        # default port for pg exporter
    # pg_exporter_url: ''                           # optional, if not set, generate from reference parameters

    # - pgbouncer exporter - #
    # pgbouncer exporter require pgbouncer to work, so it is disabled by default in monitor-only mode
    # pgbouncer_exporter_enabled: false             # setup pgbouncer_exporter on instance (if you don't have pgbouncer, disable it)
    # pgbouncer_exporter_port: 9631                 # default port for pgbouncer exporter
    # pgbouncer_exporter_url: ''                    # optional, if not set, generate from reference parameters

    # - postgres variables reference - #
    # pg_dbsu: postgres
    # pg_port: 5432                                 # postgres port (5432 by default)
    # pgbouncer_port: 6432                          # pgbouncer port (6432 by default)
    # pg_localhost: /var/run/postgresql             # localhost unix socket dir for connection
    # pg_default_database: postgres                 # default database will be used as primary monitor target
    # pg_monitor_username: dbuser_monitor           # system monitor username, for postgres and pgbouncer
    # pg_monitor_password: DBUser.Monitor           # system monitor user's password
    # service_registry: consul                      # none | consul | etcd | both



#------------------------------------------------------------------------------
# update static inventory in meta node and reload
#------------------------------------------------------------------------------
- name: Update prometheus static sd files
  become: yes
  hosts: meta
  tags: prometheus
  gather_facts: no
  vars:
    #------------------------------------------------------------------------------
    # RECOMMEND CHANGES
    #------------------------------------------------------------------------------
    prometheus_sd_method: static                  # service discovery method: static|consul|etcd

  tasks:
    - include_tasks: roles/prometheus/tasks/targets.yml
    - include_tasks: roles/prometheus/tasks/reload.yml

...
