port = {{ pg_port }}
listen_addresses='*'
max_connections=800                     # default 100
superuser_reserved_connections=10      # reserve 10 connection for su
max_locks_per_transaction=128           # default 64
max_prepared_transactions=0            # 0 disable 2PC
track_commit_timestamp=on              # enabled xact timestamp
max_worker_processes=64                 # keep default 8 (set to cpu core)
wal_level=logical                      # logical

#----------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#----------------------------------------------------------------------
# memory=shared_buffers and maintenance_work_mem will be dynamically set
shared_buffers={{ pg_shared_buffers }}
maintenance_work_mem={{ pg_maintenance_work_mem }}
work_mem=32MB                           # default 4MB
huge_pages=try                         # try huge pages
temp_file_limit=100GB                   # 0 -> 40GB (according to your disk)
vacuum_cost_delay=2ms                  # wait 5ms per 10000 cost
vacuum_cost_limit=10000                # 10000 cost each round
bgwriter_delay=10ms                    # check dirty page every 10ms
bgwriter_lru_maxpages=800              # 100 -> 800
bgwriter_lru_multiplier=5.0            # 2.0 -> 5.0  more cushion buffer

#----------------------------------------------------------------------
# WAL
#----------------------------------------------------------------------
wal_buffers=16MB                       # max to 16MB
wal_writer_delay=20ms                  # wait period
wal_writer_flush_after=1MB             # max allowed data loss
min_wal_size=100GB                     # at least 100GB WAL
max_wal_size=400GB                     # at most 400GB WAL
commit_delay=20                        # 200ms -> 20ms, increase speed
commit_siblings=10                     # 5 -> 10
checkpoint_timeout=60min               # checkpoint 5min -> 1h
checkpoint_completion_target=0.95      # 0.5 -> 0.8

#----------------------------------------------------------------------
# REPLICATION
#----------------------------------------------------------------------
# synchronous_standby_names=''
vacuum_defer_cleanup_age=50000         # 0->50000 last 50000 xact changes will not be vacuumed
max_standby_archive_delay=10min        # max delay before canceling queries when reading WAL from archive;
max_standby_streaming_delay=3min       # max delay before canceling queries when reading streaming WAL;
wal_receiver_status_interval=1s        # send replies at least this often
hot_standby_feedback=on                # send info from standby to prevent query conflicts
wal_receiver_timeout=60s               # time that receiver waits for
max_logical_replication_workers=8      # 4 -> 8, 6 sync worker + 1~2 apply worker
max_sync_workers_per_subscription=6    # 2 -> 6, 6 sync worker

#----------------------------------------------------------------------
# QUERY TUNING
#----------------------------------------------------------------------
# planner
# enable_partitionwise_join=on
random_page_cost=1.1                   # 4 for HDD, 1.1 for SSD
effective_cache_size=320GB               # max mem - shared buffer
default_statistics_target=1000          # stat bucket 100 -> 200

#----------------------------------------------------------------------
# REPORTING AND LOGGING
#----------------------------------------------------------------------
log_destination=csvlog                 # use standard csv log
logging_collector=on                   # enable csvlog
log_directory=log                      # default log dir=/pg/data/log
# log_filename='postgresql-%a.log'     # weekly auto-recycle
log_filename='postgresql-%Y-%m-%d.log' # YYYY-MM-DD full log retention
log_checkpoints=on                     # log checkpoint info
log_lock_waits=on                      # log lock wait info
log_replication_commands=on            # log replication info
log_statement=ddl                      # log ddl change
log_min_duration_statement=100         # log slow query (>100ms)

#----------------------------------------------------------------------
# STATISTICS
#----------------------------------------------------------------------
track_io_timing=on                     # collect io statistics
track_functions=all                    # track all functions (none|pl|all)
track_activity_query_size=32768         # max query length in pg_stat_activity

#----------------------------------------------------------------------
# AUTOVACUUM
#----------------------------------------------------------------------
log_autovacuum_min_duration=1s         # log autovacuum activity take more than 1s
autovacuum_max_workers=3               # default autovacuum worker 3 -> 1
autovacuum_naptime=1min                # default autovacuum naptime 1min
autovacuum_vacuum_scale_factor=0.08    # fraction of table size before vacuum   20% -> 8%
autovacuum_analyze_scale_factor=0.04   # fraction of table size before analyze  10% -> 4%
autovacuum_vacuum_cost_delay=-1        # default vacuum cost delay=same as vacuum_cost_delay
autovacuum_vacuum_cost_limit=-1        # default vacuum cost limit=same as vacuum_cost_limit
autovacuum_freeze_max_age=100000000    # age > 1 billion triggers force vacuum

#----------------------------------------------------------------------
# CLIENT
#----------------------------------------------------------------------
deadlock_timeout=50ms                  # 50ms for deadlock
idle_in_transaction_session_timeout=1min  # 10min timeout for idle in transaction

#----------------------------------------------------------------------
# CUSTOMIZED OPTIONS
#----------------------------------------------------------------------
# extensions
shared_preload_libraries='{{ pg_shared_libraries | default("pg_stat_statements, auto_explain") }}'

# auto_explain
auto_explain.log_min_duration=1s       # auto explain query slower than 1s
auto_explain.log_analyze=true          # explain analyze
auto_explain.log_verbose=true          # explain verbose
auto_explain.log_timing=true           # explain timing
auto_explain.log_nested_statements=true

# pg_stat_statements
pg_stat_statements.max=10000            # 5000 -> 3000 queries
pg_stat_statements.track=all           # track all statements (all|top|none)
pg_stat_statements.track_utility=on   # do not track query other than CRUD
pg_stat_statements.track_planning=off  # do not track planning metrics
